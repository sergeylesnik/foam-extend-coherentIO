#!/bin/sh
cd ${0%/*} || exit 1    # run from this directory

# trap "exit -1" ERR
set -e
trap 'catch $? $LINENO' EXIT
catch() {
  if [ "$1" != "0" ]; then
    # error handling goes here
    echo "Error $1 occurred on $2"
  fi
}

if [ "$PWD" != "$WM_PROJECT_DIR/src" ]
then
    echo "Error: Current directory in not \$WM_PROJECT_DIR/src"
    echo "    The environment variable are not consistent with the installation."
    echo "    Check the FOAM entries in your dot-files and source them."
    exit 1
fi

set -x

# update foam version strings if required
wmakePrintBuild -check || /bin/rm -f foam/Make/$WM_OPTIONS/global.? 2>/dev/null

wmakeLnInclude foam
wmakeLnInclude meshTools
wmakeLnInclude OSspecific/$WM_OSTYPE

wmake libo  OSspecific/$WM_OSTYPE

set +x
echo
echo "Note: ignore spurious warnings about missing mpicxx.h headers"
set -x
wmake libso foam

# Decomposition methods needed by meshTools
decompositionMethods/AllwmakeLnInclude
decompositionMethods/Allwmake

wmake libso lagrangian/basic
#
#wmake libso edgeMesh
#wmake libso surfMesh
#
wmake libso meshTools
wmake libso finiteVolume
#wmake libso finiteArea
#
#conversion/Allwmake
#wmake libso lduSolvers
#
#wmake libso tetFiniteElement
#
# We can now compile this library from decompositionMethods
wmake libso decompositionMethods/decomposeReconstruct
#
## Make dynamicMesh tools
dynamicMesh/AllwmakeLnInclude
dynamicMesh/Allwmake
#
#wmake libso coupledMatrix
#wmake libso sampling
#
wmake libso ODE
#wmake libso POD
#wmake libso randomProcesses
mesh/Allwmake
#
#thermophysicalModels/Allwmake
#transportModels/Allwmake
#turbulenceModels/Allwmake
#lagrangian/Allwmake
#wmake libso conjugateHeatTransfer
#
#postProcessing/Allwmake
#
#wmake libso errorEstimation
#
#fvAgglomerationMethods/Allwmake
#
#wmake libso engine
#
#wmake libso equationReader
#wmake libso multiSolver
#
#wmake libso solidModels
#wmake libso dbns
#
#wmake libso immersedBoundary/immersedBoundary
#wmake libso immersedBoundary/immersedBoundaryTurbulence/incompressible
#wmake libso immersedBoundary/immersedBoundaryTurbulence/compressible
#wmake libso immersedBoundary/immersedBoundaryDynamicMesh
#
#wmake libso overset/oversetMesh
#wmake libso overset/oversetDynamicFvMesh
#
#( cd cudaSolvers ; ./Allwmake )

# ----------------------------------------------------------------- end-of-file
